// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Sankey.Infrastructure;
using System;

namespace Sankey.Infrastructure.Migrations
{
    [DbContext(typeof(SankeyContext))]
    partial class SankeyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sankey.Domain.Models.Flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GeoId");

                    b.Property<int>("SourceId");

                    b.Property<int>("TableId");

                    b.Property<int?>("TableId1");

                    b.Property<int>("TargetId");

                    b.Property<int>("Value");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("GeoId");

                    b.HasIndex("SourceId");

                    b.HasIndex("TableId");

                    b.HasIndex("TableId1");

                    b.HasIndex("TargetId");

                    b.ToTable("Flow");
                });

            modelBuilder.Entity("Sankey.Domain.Models.Geo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Iso3166")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NameFr")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Geo");
                });

            modelBuilder.Entity("Sankey.Domain.Models.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NameFr")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Node");
                });

            modelBuilder.Entity("Sankey.Domain.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NameFr")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("NoteEn")
                        .IsRequired()
                        .HasMaxLength(8192);

                    b.Property<string>("NoteFr")
                        .IsRequired()
                        .HasMaxLength(8192);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("Sankey.Domain.Models.Flow", b =>
                {
                    b.HasOne("Sankey.Domain.Models.Geo", "Geo")
                        .WithMany()
                        .HasForeignKey("GeoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sankey.Domain.Models.Node", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sankey.Domain.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sankey.Domain.Models.Table")
                        .WithMany("Flows")
                        .HasForeignKey("TableId1");

                    b.HasOne("Sankey.Domain.Models.Node", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
